-- in pq.cafe 

mod INV {
  pr(PQOPENPGP)
  vars S S2 : Sys
  vars M M2 : RawMsg
  vars K K2 : SessionKey
  vars A B A2 B2 : Prin

  vars Mlk-SK Mlk-SK2 : MLK-SecretK
  vars Mlk-PK : MLK-PublicK 
  vars Mlk-Ci : MLK-Cipher 

  vars Ecdhk-SK Ecdhk-SK2 : ECDHK-SecretK
  vars Ecdhk-PK : ECDHK-PublicK 
  vars Ecdhk-Ci : ECDHK-Cipher 

  vars Eddsa-PK : EdDSA-PublicK 
  vars Mldsa-PK : MLDSA-PublicK 
  vars Eddsa-SK : EdDSA-PrivateK 
  vars Mldsa-SK : MLDSA-PrivateK 

  vars DL DL2 : DataL
  vars KC D1 D2 D3 SIGN1 SIGN2 : Data

  -- checking the protocol execution
  -- when A sends to B; using Ecdhk-SK & Mlk-SK
  op check : Sys Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK MLK-Cipher ECDHK-Cipher Data -> Bool .
  eq check(S,A,B,M,K,Ecdhk-SK2,Mlk-SK2,Mlk-Ci,Ecdhk-Ci,KC) = 
    msg(A,A,B, (ecdhk-encapsC(ECDHK-PubK(B),Ecdhk-SK2) || mlk-encapsC(MLK-PubK(B),Mlk-SK2) || KC) || (senc(K,EdDSA-Sign(EdDSA-PriK(A),h(M)) || MLDSA-Sign(MLDSA-PriK(A),h(M)) || M))) \in nw(S) and
    MLDSA-Verify(MLDSA-PubK(A),MLDSA-Sign(mldsa-getPrivate(MLDSA-PubK(A)),h(M)),h(M)) and
    EdDSA-Verify(EdDSA-PubK(A),EdDSA-Sign(eddsa-getPrivate(EdDSA-PubK(A)),h(M)),h(M)) and
    sdec(kcombine(mlk-decaps(Mlk-Ci,MLK-PriK(B)) || ecdhk-decaps(Ecdhk-Ci,ECDHK-PriK(B)) || Ecdhk-Ci || ECDHK-PubK(B) || Mlk-Ci || MLK-PubK(B)),KC) = K .

  -- -- **************************************************************************************************************************************************************************************************
  -- =====> SECRECY OF A SESSION KEY : 1 + 2
  op keySe : Sys Prin Prin RawMsg SessionKey MLK-Cipher ECDHK-Cipher Data Data Data -> Bool .
  eq keySe(S,A,B,M,K,Mlk-Ci,Ecdhk-Ci,KC,SIGN1,SIGN2) = 
    (
      not(A = intru or B = intru) and
      msg(A,A,B, (Ecdhk-Ci || Mlk-Ci || KC || (senc(K,
        SIGN1 || 
        SIGN2 || M)))) \in nw(S) and
      MLDSA-Verify(MLDSA-PubK(A), SIGN2, h(M)) and
      EdDSA-Verify(EdDSA-PubK(A), SIGN1, h(M)) and
      sdec(kcombine(
        mlk-decaps(Mlk-Ci, MLK-PriK(B)) || 
        ecdhk-decaps(Ecdhk-Ci, ECDHK-PriK(B)) || 
        Ecdhk-Ci || ECDHK-PubK(B) || 
        Mlk-Ci || MLK-PubK(B)), KC) = K and
      not (mlk-decaps(Mlk-Ci, MLK-PriK(B)) \in leakscr(S)) and 
      not (ecdhk-decaps(Ecdhk-Ci, ECDHK-PriK(B)) \in leakscr(S)) and
      not (ECDHK-PriK(B) \in leakscr(S)) and 
      not (MLK-PriK(B) \in leakscr(S))
    ) implies 
      (not K \in knl(S)) .

-- inv
  -- no lemma
  op inv1 : Sys SessionKey -> Bool
  eq inv1(S,K) = (K \in knl(S)) implies (K \in usecret(S)) .
  
  -- no lemma
  op inv2 : Sys Prin Prin RawMsg SessionKey MLK-Cipher ECDHK-Cipher Data Data Data -> Bool
  eq inv2(S,A,B,M,K,Mlk-Ci,Ecdhk-Ci,KC,SIGN1,SIGN2) = 
    (not(A = intru or B = intru) and msg(A,A,B, (Ecdhk-Ci || Mlk-Ci || KC) || (senc(K,SIGN1 || SIGN2 || M))) \in nw(S))
    implies 
     (K \in usecret(S)) .
}
