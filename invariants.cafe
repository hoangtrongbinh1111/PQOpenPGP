in pq.cafe 

mod INV {
  pr(PQOPENPGP)
  var S : Sys
  vars M M2 : RawMsg
  vars K K2 : SessionKey
  vars A B A2 B2 : Prin

  vars Mlk-SK Mlk-SK2 : MLK-SecretK
  vars Mlk-PK : MLK-PublicK 
  vars Mlk-Ci : MLK-Cipher 

  vars Ecdhk-SK Ecdhk-SK2 : ECDHK-SecretK
  vars Ecdhk-PK : ECDHK-PublicK 
  vars Ecdhk-Ci : ECDHK-Cipher 

  vars Eddsa-PK : EdDSA-PublicK 
  vars Mldsa-PK : MLDSA-PublicK 
  vars Eddsa-SK : EdDSA-PrivateK 
  vars Mldsa-SK : MLDSA-PrivateK 

  vars DL : DataL
  vars KC : Data

-- checking the protocol execution
-- when A sends to B; using Ecdhk-SK & Mlk-SK
  op check : Sys Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK ECDHK-SecretK MLK-SecretK EdDSA-PublicK MLDSA-PublicK EdDSA-PrivateK MLDSA-PrivateK MLK-Cipher ECDHK-Cipher Data -> Bool .
  eq check(S,A,B,M,K,Ecdhk-SK,Mlk-SK,Ecdhk-SK2,Mlk-SK2,Eddsa-PK,Mldsa-PK,Eddsa-SK,Mldsa-SK,Mlk-Ci,Ecdhk-Ci,KC) = 
    msg1(A,A,B,ecdhk-keygen(Ecdhk-SK) || mlk-keygen(Mlk-SK)) \in nw(S) and
    msg2(B,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S) and
    MLDSA-Verify(Mldsa-PK,MLDSA-Sign(mldsa-getPrivate(Mldsa-PK),h(M)),h(M)) and
    EdDSA-Verify(Eddsa-PK,EdDSA-Sign(eddsa-getPrivate(Eddsa-PK),h(M)),h(M)) and
    sdec(kcombine(mlk-decaps(Mlk-Ci,Mlk-SK),ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK),Mlk-Ci,Ecdhk-Ci,mlk-keygen(Mlk-SK),ecdhk-keygen(Ecdhk-SK)),KC) = K .

  -- **************************************************************************************************************************************************************************************************
  -- =====>  KEY SECRECY
  op keySe : Sys Prin Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK ECDHK-SecretK MLK-SecretK EdDSA-PublicK MLDSA-PublicK EdDSA-PrivateK MLDSA-PrivateK MLK-Cipher ECDHK-Cipher Data -> Bool .
  eq keySe(S,B2,A,B,M,K,Ecdhk-SK,Mlk-SK,Ecdhk-SK2,Mlk-SK2,Eddsa-PK,Mldsa-PK,Eddsa-SK,Mldsa-SK,Mlk-Ci,Ecdhk-Ci,KC) = 
    (not(A = intru or B = intru) and
    msg1(A,A,B,ecdhk-keygen(Ecdhk-SK) || mlk-keygen(Mlk-SK)) \in nw(S) and
    msg2(B2,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S) and
    MLDSA-Verify(Mldsa-PK,MLDSA-Sign(mldsa-getPrivate(Mldsa-PK),h(M)),h(M)) and
    EdDSA-Verify(Eddsa-PK,EdDSA-Sign(eddsa-getPrivate(Eddsa-PK),h(M)),h(M)) and
    sdec(kcombine(mlk-decaps(Mlk-Ci,Mlk-SK),ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK),Mlk-Ci,Ecdhk-Ci,mlk-keygen(Mlk-SK),ecdhk-keygen(Ecdhk-SK)),KC) = K and
    not (Ecdhk-SK \in leakscr(S)) and not (Mlk-SK \in leakscr(S)) and not (Ecdhk-SK2 \in leakscr(S)) and not (Mlk-SK2 \in leakscr(S)) and not (Eddsa-SK \in leakscr(S)) and not (Mldsa-SK \in leakscr(S)) and not (mlk-decaps(Mlk-Ci,Mlk-SK) \in leakscr(S)) and not (ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK) \in leakscr(S))) implies not (K \in knl(S)) .

  -- **************************************************************************************************************************************************************************************************
  -- =====> SECRECY OF MESSSAGE
  op seMess : Sys Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK ECDHK-SecretK MLK-SecretK EdDSA-PublicK MLDSA-PublicK EdDSA-PrivateK MLDSA-PrivateK MLK-Cipher ECDHK-Cipher Data -> Bool .
  eq seMess(S,A,B,M,K,Ecdhk-SK,Mlk-SK,Ecdhk-SK2,Mlk-SK2,Eddsa-PK,Mldsa-PK,Eddsa-SK,Mldsa-SK,Mlk-Ci,Ecdhk-Ci,KC) = 
    (not(A = intru or B = intru) and
    msg1(A,A,B,ecdhk-keygen(Ecdhk-SK) || mlk-keygen(Mlk-SK)) \in nw(S) and
    msg2(B,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S) and
    MLDSA-Verify(Mldsa-PK,MLDSA-Sign(mldsa-getPrivate(Mldsa-PK),h(M)),h(M)) and
    EdDSA-Verify(Eddsa-PK,EdDSA-Sign(eddsa-getPrivate(Eddsa-PK),h(M)),h(M)) and
    sdec(kcombine(mlk-decaps(Mlk-Ci,Mlk-SK),ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK),Mlk-Ci,Ecdhk-Ci,mlk-keygen(Mlk-SK),ecdhk-keygen(Ecdhk-SK)),KC) = K) implies not (M \in knl(S)) .
  -- **************************************************************************************************************************************************************************************************
  -- =====> AUTHEN OF MESSAGE 

  op authenMess : Sys Prin Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK ECDHK-SecretK MLK-SecretK EdDSA-PublicK MLDSA-PublicK EdDSA-PrivateK MLDSA-PrivateK MLK-Cipher ECDHK-Cipher Data -> Bool .
  eq authenMess(S,B2,A,B,M,K,Ecdhk-SK,Mlk-SK,Ecdhk-SK2,Mlk-SK2,Eddsa-PK,Mldsa-PK,Eddsa-SK,Mldsa-SK,Mlk-Ci,Ecdhk-Ci,KC) = 
    (not(A = intru or B = intru) and
    not(mlk-decaps(Mlk-Ci,Mlk-SK) \in leakscr(S)) and
    not(ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK) \in leakscr(S)) and
    not(Mlk-SK \in leakscr(S)) and not(Ecdhk-SK \in leakscr(S)) and
    not(Mlk-SK2 \in leakscr(S)) and not(Ecdhk-SK2 \in leakscr(S)) and
    not (Eddsa-SK \in leakscr(S)) and not (Mldsa-SK \in leakscr(S)) and
    msg1(A,A,B,ecdhk-keygen(Ecdhk-SK) || mlk-keygen(Mlk-SK)) \in nw(S) and
    msg2(B2,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S) and
    MLDSA-Verify(Mldsa-PK,MLDSA-Sign(mldsa-getPrivate(Mldsa-PK),h(M)),h(M)) and
    EdDSA-Verify(Eddsa-PK,EdDSA-Sign(eddsa-getPrivate(Eddsa-PK),h(M)),h(M)) and
    sdec(kcombine(mlk-decaps(Mlk-Ci,Mlk-SK),ecdhk-decaps(Ecdhk-Ci,Ecdhk-SK),Mlk-Ci,Ecdhk-Ci,mlk-keygen(Mlk-SK),ecdhk-keygen(Ecdhk-SK)),KC) = K) implies msg2(B,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S) .

-- inv
  op inv0 : Sys Prin Prin RawMsg SessionKey ECDHK-SecretK MLK-SecretK ECDHK-SecretK MLK-SecretK EdDSA-PrivateK MLDSA-PrivateK Data -> Bool .
  eq inv0(S,A,B,M,K,Ecdhk-SK,Mlk-SK,Ecdhk-SK2,Mlk-SK2,Eddsa-SK,Mldsa-SK,KC) = 
    (not(A = intru or B = intru) and
    msg1(A,A,B,ecdhk-keygen(Ecdhk-SK) || mlk-keygen(Mlk-SK)) \in nw(S) and
    msg2(B,B,A, ((ecdhk-encapsC(ecdhk-keygen(Ecdhk-SK),Ecdhk-SK2) || mlk-encapsC(mlk-keygen(Mlk-SK),Mlk-SK2) || KC) || senc(K,EdDSA-Sign(Eddsa-SK,h(M)) || MLDSA-Sign(Mldsa-SK,h(M)) || M) || eddsa-public(Eddsa-SK) || mldsa-public(Mldsa-SK))) \in nw(S)) implies not (K \in knl(S)) .
}
