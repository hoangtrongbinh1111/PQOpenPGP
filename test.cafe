in pq.cafe .
in invariants.cafe .

--> false
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  ops s s1 : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close
