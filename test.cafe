
in pq .
in invariants .

--> false
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),r1) || senc(r1,(sign1 || sign2 || m)))) \in nw(s)) = true .
  red inv3(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2) implies keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,sign1,sign2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,sign1,sign2) .
close