--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  red keySe(init,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r1 = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = false .
  eq (msg(intru,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true, use inv3 as a lemma
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = false .
  eq (msg(intru,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = false .
  red inv3(s,r1,r2,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci) implies (keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2)) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq time(s) = n2 .
  eq (k \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = true .
  eq (time(s) = n2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2 .
  eq (senc(k,(sign1 || sign2 || m)) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq (MLDSA-Sign(MLDSA-PriK(r1),h(m)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1 .
  eq (senc(k,(sign1 || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = true .
  eq (EdDSA-Sign(EdDSA-PriK(r1),h(m)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) .
  eq (senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m)) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = true .
  eq (r6 = senc(k,(EdDSA-Sign(EdDSA-PriK(r1),h(m)) || MLDSA-Sign(MLDSA-PriK(r1),h(m)) || m))) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) .
  eq (senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = true .
  eq (r5 = senc(kcombine(((MLK-PriK(r2) & mlk-sk2) || (ECDHK-PriK(r2) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) || mlk-keygen(MLK-PriK(r2)))),k)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = true .
  eq (r4 = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),mlk-sk2)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2) \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq (r3 = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),ecdhk-sk2)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (kc = senc(kcombine(dl),k)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq (b = r2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq a = r1 .
  eq (a2 = intru) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq (a = r1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r3 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(fkMsg(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruBreakECDH(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruBreakECDH(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruBreakEdDSA(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruBreakEdDSA(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcECDHKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcECDHKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcECDHKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcMLKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcMLKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruCalcMLKEMInfo(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq a = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq a = r1 .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq b = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' (leakscr(s)  MLDSA-PkNPair(MLDSA-PriK(r1),time(s)))) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> false
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' (leakscr(s)  MLDSA-PkNPair(MLDSA-PriK(r1),time(s)))) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' (leakscr(s)  MLDSA-PkNPair(MLDSA-PriK(r1),time(s)))) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq (MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq (EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (a = r1) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine(dl),k)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLDSAKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq a = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq b = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq b = r1 .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq mlk-sk2 = MLK-PriK(r1) .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' (leakscr(s)  MLK-PkNPair(MLK-PriK(r1),time(s)))) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> false
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' (leakscr(s)  MLK-PkNPair(MLK-PriK(r1),time(s)))) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' (leakscr(s)  MLK-PkNPair(MLK-PriK(r1),time(s)))) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (mlk-sk2 = MLK-PriK(r1)) = false .
  eq (k \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq (MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq kc = senc(kcombine(dl),k) .
  eq (EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (b = r1) = false .
  eq (kc = senc(kcombine(dl),k)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComMLKKeyLt(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruComSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> false
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (k \in knl(s)) = false .
  eq (k \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(sign1 || sign2 || m))),n2) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (k \in sdec(r1,r2)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq (MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),k) .
  eq (EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine(dl),k)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruDecryptCrypto(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruECDHKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruECDHKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruECDHKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruGetPubInfo(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruMLKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruMLKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruMLKDecaps(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruPrimCrypto(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruPrimCrypto(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandECDHKEMSecret(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandECDHKEMSecret(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandMLKEMSecret(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandMLKEMSecret(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandMessage(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandMessage(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq a = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true, use inv2 as a lemma
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),r1) || senc(r1,(sign1 || sign2 || m))),n2) \in nw(s)) = true .
  red inv2(s,a2,a,b,m,r1,ecdhk-sk2,mlk-sk2,n2) implies (keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2)) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2 .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (r1 \in knl(s)) = false .
  eq (r1 \in leakscr(s)) = false .
  eq (MLDSA-PriK(a) \in' leakscr(s)) = false .
  eq (MLK-PriK(b) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (msg(a2,a,b,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || senc(kcombine(((MLK-PriK(b) & mlk-sk2) || (ECDHK-PriK(b) & ecdhk-sk2) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(b)),ecdhk-sk2) || ecdhk-keygen(ECDHK-PriK(b)) || mlk-encapsC(mlk-keygen(MLK-PriK(b)),mlk-sk2) || mlk-keygen(MLK-PriK(b)))),r1) || senc(r1,(sign1 || sign2 || m))),n2) \in nw(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1 .
  eq (MLDSA-Sign(MLDSA-PriK(a),h(m)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine(dl),r1) .
  eq (EdDSA-Sign(EdDSA-PriK(a),h(m)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine(dl),r1)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (k = r1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruRandSessionKey(s,r1),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign2(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign2(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSign2(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSymCrypto1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSymCrypto1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r1 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(intruSymCrypto1(s,r1,r2),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq r1 = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = false .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(sign1 || sign2 || r3))),n2) \in nw(s)) = true .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = true .
  eq (r4 \in leakscr(s)) = false .
  eq (r5 \in leakscr(s)) = false .
  eq (r6 \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in' leakscr(s)) = false .
  eq (MLK-PriK(r2) \in' leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(r2)) \in leakscr(s)) = false .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(sign1 || sign2 || r3))),n2) \in nw(s)) = false .
  red inv1(s,r4) implies (keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2)) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq time(s) = n2 .
  eq (r4 \in knl(s)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2 .
  eq (time(s) = n2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1 .
  eq (MLDSA-Sign(MLDSA-PriK(r1),h(r3)) = sign2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq kc = senc(kcombine(dl),r4) .
  eq (EdDSA-Sign(EdDSA-PriK(r1),h(r3)) = sign1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq mlk-sk2 = r6 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (kc = senc(kcombine(dl),r4)) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq m = r3 .
  eq (mlk-sk2 = r6) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq k = r4 .
  eq (m = r3) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq ecdhk-sk2 = r5 .
  eq (k = r4) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq b = r2 .
  eq (ecdhk-sk2 = r5) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq a2 = r1 .
  eq (b = r2) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq a = r1 .
  eq (a2 = r1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op n2 : -> Nat .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign1 : -> Data .
  op sign2 : -> Data .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (a = r1) = false .
  red keySe(s,a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) implies keySe(send(s,r1,r2,r3,r4,r5,r6),a2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc,dl,sign1,sign2,n2) .
close

--> Time taken is 21630ms