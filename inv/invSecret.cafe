--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op s : -> Sys .
  red secrecy(init,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(fkMsg1(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(fkMsg1(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(fkMsg1(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(fkMsg1(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(fkMsg1(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq a = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1) .
  eq ((ECDHK-PriK(b) & r1) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1) .
  eq ((ECDHK-PriK(b) & r1) \in knl(s)) = false .
  eq ((ECDHK-PriK(b) & r1) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1) .
  eq ((ECDHK-PriK(b) & r1) \in knl(s)) = false .
  eq ((ECDHK-PriK(b) & r1) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || (ECDHK-PriK(b) & r1) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r2) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1) .
  eq ((ECDHK-PriK(b) & r1) \in knl(s)) = false .
  eq ((ECDHK-PriK(b) & r1) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || (ECDHK-PriK(b) & r1) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r2) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq (mlk-getSecret(mlk-ci) = r2) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq ecdhk-getSecret(ecdhk-ci) = r1 .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) = (ECDHK-PriK(b) & r1)) = false .
  eq (mlk-getSecret(r4) = MLK-PriK(b)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r2) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq (mlk-getSecret(mlk-ci) = r2) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq ecdhk-getSecret(r3) = ECDHK-PriK(b) .
  eq (ecdhk-getSecret(ecdhk-ci) = r1) = false .
  eq (mlk-getSecret(r4) = MLK-PriK(b)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r2) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2) .
  eq ((MLK-PriK(b) & r2) \in knl(s)) = false .
  eq ((MLK-PriK(b) & r2) \in leakscr(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(b) & r2) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq mlk-getSecret(mlk-ci) = r2 .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) = (MLK-PriK(b) & r2)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq mlk-getSecret(r4) = MLK-PriK(b) .
  eq (mlk-getSecret(mlk-ci) = r2) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  eq (ecdhk-getSecret(r3) = ECDHK-PriK(b)) = false .
  eq (mlk-getSecret(r4) = MLK-PriK(b)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruCalcKEMInfo(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (msg2(r2,r2,r1,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruComKEM(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (msg2(r2,r2,r1,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruComKEM(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq a = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq b = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq mlk-ci = r4 .
  eq (kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,ECDHK-PriK(b),r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq r1 = ECDHK-PriK(b) .
  eq (ECDHK-PriK(b) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(r2 || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r1 = ECDHK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(r2,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq ecdhk-ci = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (mlk-ci = r4) = false .
  eq (kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(r2,ECDHK-PriK(b)) || r2 || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq a = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq b = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,MLK-PriK(b),r4),b,ecdhk-sk2,MLK-PriK(b)) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = true .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,MLK-PriK(b),r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq r3 = MLK-PriK(b) .
  eq (MLK-PriK(b) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || r4 || senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k) .
  eq (r3 = MLK-PriK(b)) = false .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(r4,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq mlk-ci = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine((mlk-decaps(r4,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || r4 || mlk-keygen(MLK-PriK(b)))),k)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq a = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq b = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(intruDecaps(s,r1,r2,r3,r4),b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = true .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = true .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv1 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = true .
  red inv1(s,b,ecdhk-sk2,r3) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = true .
  eq (ECDHK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (MLK-PriK(b) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) || senc(k,(EdDSA-Sign(EdDSA-PriK(a),h(m)) || MLDSA-Sign(MLDSA-PriK(a),h(m)) || m)))) \in nw(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = true .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in leakscr(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(b) \in leakscr(s)) = false .
  eq (MLK-PriK(b) \in leakscr(s)) = false .
  eq (ecdhk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (mlk-sk2 \in leakscr(intruDecaps(s,r1,r2,r3,r4))) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in knl(s)) = false .
  eq (ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) \in leakscr(s)) = false .
  eq (mlk-decaps(mlk-ci,MLK-PriK(b)) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (ecdhk-ci = r2) = false .
  eq (mlk-ci = r4) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(kcombine((mlk-decaps(mlk-ci,MLK-PriK(b)) || ecdhk-decaps(ecdhk-ci,ECDHK-PriK(b)) || ecdhk-ci || ecdhk-keygen(ECDHK-PriK(b)) || mlk-ci || mlk-keygen(MLK-PriK(b)))),k)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruDecaps(s,r1,r2,r3,r4),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op s : -> Sys .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruGetPubInfo(s,r1),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruPrimCrypto1(s,r1),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruPrimCrypto1(s,r1),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruPrimCrypto2(s,r1),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruPrimCrypto2(s,r1),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruRandKEMSecret(s,r1,r2),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruRandKEMSecret(s,r1,r2),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(intruRandKEMSecret(s,r1,r2),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq r2 = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = false .
  eq (msg2(r2,r2,r3,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)))) \in nw(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv2 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = false .
  eq (msg2(r2,r2,r3,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)))) \in nw(s)) = false .
  red inv2(s,r3,ecdhk-ci,mlk-ci) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = false .
  eq (msg2(r2,r2,r3,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)))) \in nw(s)) = true .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true, use inv2 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in knl(s)) = true .
  eq ((ECDHK-PriK(r3) & r6) \in leakscr(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in leakscr(s)) = false .
  eq (msg2(r2,r2,r3,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)))) \in nw(s)) = false .
  red inv2(s,r3,ecdhk-ci,mlk-ci) implies (secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc)) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (ecdhk-sk2 \in leakscr(s)) = false .
  eq (mlk-sk2 \in leakscr(s)) = false .
  eq (ECDHK-PriK(r3) \in leakscr(s)) = false .
  eq (MLK-PriK(r3) \in leakscr(s)) = false .
  eq ((ECDHK-PriK(r3) & r6) \in knl(s)) = false .
  eq ((MLK-PriK(r3) & r7) \in knl(s)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq (mlk-ci = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq (kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq m = r4 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (ecdhk-ci = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq k = r5 .
  eq (m = r4) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq b = r3 .
  eq (k = r5) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = r2 .
  eq (b = r3) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op ecdhk-sk2 : -> ECDHK-SecretK .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op mlk-sk2 : -> MLK-SecretK .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = r2) = false .
  red secrecy(s,b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) implies secrecy(send(s,r1,r2,r3,r4,r5,r6,r7),b2,a,b,m,k,ecdhk-sk2,mlk-sk2,mlk-ci,ecdhk-ci,kc) .
close

--> Time taken is 464202ms