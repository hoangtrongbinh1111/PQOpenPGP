--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  red inv10(init,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(fkMsg1(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(fkMsg1(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(fkMsg1(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(fkMsg1(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(fkMsg1(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-getSecret(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-getSecret(r1) = kc) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakECDH(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq eddsa-getPrivate(r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (eddsa-getPrivate(r1) = kc) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruBreakEdDSA(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r3) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r3) & r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r3) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r3) & r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ecdhk-getSecret(r3) & r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r3) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r3) & r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ecdhk-getSecret(r3) & r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r3) & r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r2) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (mlk-getSecret(r4) & r2) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (mlk-getSecret(r4) & r2) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r2) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq kc = ecdhk-encapsC(r3,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r3,r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq kc = ecdhk-encapsC(r3,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r3,r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(r3,r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq kc = ecdhk-encapsC(r3,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r3,r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(r3,r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq kc = ecdhk-encapsC(r3,r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq (kc = ecdhk-encapsC(r3,r1)) = false .
  eq kc = mlk-encapsC(r4,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r2) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq (kc = ecdhk-encapsC(r3,r1)) = false .
  eq kc = mlk-encapsC(r4,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(r4,r2) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq (kc = ecdhk-encapsC(r3,r1)) = false .
  eq kc = mlk-encapsC(r4,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(r4,r2) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq (kc = ecdhk-encapsC(r3,r1)) = false .
  eq kc = mlk-encapsC(r4,r2) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r3) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r2)) = false .
  eq (kc = ecdhk-encapsC(r3,r1)) = false .
  eq (kc = mlk-encapsC(r4,r2)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op r3 : -> ECDHK-PublicK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruCalcKEMInfo(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r3 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r3 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq kc = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r4 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r4 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r4 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r4 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r4 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq kc = r4 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r4 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = true .
  eq (kc = r3) = false .
  eq (kc = r4) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-SecretK .
  op r4 : -> MLK-SecretK .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r3) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r4) || r5 || r6)) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEM(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ECDHK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ECDHK-PriK(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ECDHK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ECDHK-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ECDHK-PriK(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ECDHK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ECDHK-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ECDHK-PriK(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ECDHK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ECDHK-PriK(r1)) = false .
  eq kc = MLK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLK-PriK(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ECDHK-PriK(r1)) = false .
  eq kc = MLK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLK-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || MLK-PriK(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ECDHK-PriK(r1)) = false .
  eq kc = MLK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLK-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || MLK-PriK(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ECDHK-PriK(r1)) = false .
  eq kc = MLK-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (ECDHK-PriK(r1) \in leakscr(s)) = false .
  eq (MLK-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ECDHK-PriK(r1)) = false .
  eq (kc = MLK-PriK(r1)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ECDHK-PriK(r2) & r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ECDHK-PriK(r2) & r5) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ECDHK-PriK(r2) & r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ECDHK-PriK(r2) & r5) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ECDHK-PriK(r2) & r5) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ECDHK-PriK(r2) & r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ECDHK-PriK(r2) & r5) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ECDHK-PriK(r2) & r5) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ECDHK-PriK(r2) & r5) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ECDHK-PriK(r2) & r5)) = false .
  eq kc = (MLK-PriK(r2) & r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((MLK-PriK(r2) & r6) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ECDHK-PriK(r2) & r5)) = false .
  eq kc = (MLK-PriK(r2) & r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((MLK-PriK(r2) & r6) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (MLK-PriK(r2) & r6) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ECDHK-PriK(r2) & r5)) = false .
  eq kc = (MLK-PriK(r2) & r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((MLK-PriK(r2) & r6) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (MLK-PriK(r2) & r6) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ECDHK-PriK(r2) & r5)) = false .
  eq kc = (MLK-PriK(r2) & r6) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ECDHK-PriK(r2) & r5)) = false .
  eq (kc = (MLK-PriK(r2) & r6)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (msg2(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComKEMSS(s,r1,r2,r3,r4,r5,r6),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = EdDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (EdDSA-PriK(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = EdDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (EdDSA-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || EdDSA-PriK(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = EdDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (EdDSA-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || EdDSA-PriK(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = EdDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = EdDSA-PriK(r1)) = false .
  eq kc = MLDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLDSA-PriK(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = EdDSA-PriK(r1)) = false .
  eq kc = MLDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLDSA-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || MLDSA-PriK(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = EdDSA-PriK(r1)) = false .
  eq kc = MLDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (MLDSA-PriK(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || MLDSA-PriK(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = EdDSA-PriK(r1)) = false .
  eq kc = MLDSA-PriK(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (EdDSA-PriK(r1) \in leakscr(s)) = false .
  eq (MLDSA-PriK(r1) \in leakscr(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = EdDSA-PriK(r1)) = false .
  eq (kc = MLDSA-PriK(r1)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruComSignLt(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq ecdhk-decaps(r2,r1) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq mlk-decaps(r4,r3) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (ecdhk-decaps(r2,r1) = kc) = false .
  eq (mlk-decaps(r4,r3) = kc) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-Cipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruDecaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r2) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r2) & r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r2) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r2) & r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ecdhk-getSecret(r2) & r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r2) & r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((ecdhk-getSecret(r2) & r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (ecdhk-getSecret(r2) & r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = (ecdhk-getSecret(r2) & r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r3) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r3) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (mlk-getSecret(r4) & r3) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq ((mlk-getSecret(r4) & r3) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || (mlk-getSecret(r4) & r3) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq kc = (mlk-getSecret(r4) & r3) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq kc = ecdhk-encapsC(r2,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r2,r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq kc = ecdhk-encapsC(r2,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r2,r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(r2,r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq kc = ecdhk-encapsC(r2,r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(r2,r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(r2,r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq kc = ecdhk-encapsC(r2,r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq (kc = ecdhk-encapsC(r2,r1)) = false .
  eq kc = mlk-encapsC(r4,r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r3) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq (kc = ecdhk-encapsC(r2,r1)) = false .
  eq kc = mlk-encapsC(r4,r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r3) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(r4,r3) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq (kc = ecdhk-encapsC(r2,r1)) = false .
  eq kc = mlk-encapsC(r4,r3) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(r4,r3) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(r4,r3) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq (kc = ecdhk-encapsC(r2,r1)) = false .
  eq kc = mlk-encapsC(r4,r3) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = (ecdhk-getSecret(r2) & r1)) = false .
  eq (kc = (mlk-getSecret(r4) & r3)) = false .
  eq (kc = ecdhk-encapsC(r2,r1)) = false .
  eq (kc = mlk-encapsC(r4,r3)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op r3 : -> MLK-SecretK .
  op r4 : -> MLK-PublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruEncaps(s,r1,r2,r3,r4),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (kc = r1) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruGetPubInfo(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = h(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (h(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = h(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (h(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || h(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = h(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (h(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || h(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = h(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = h(r1)) = false .
  eq kc = kcombine(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (kcombine(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = h(r1)) = false .
  eq kc = kcombine(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (kcombine(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kcombine(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = h(r1)) = false .
  eq kc = kcombine(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (kcombine(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kcombine(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = h(r1)) = false .
  eq kc = kcombine(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = h(r1)) = false .
  eq (kc = kcombine(r1)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruPrimCrypto(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r2 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r2 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r2 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r2 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r2 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq kc = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r2 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-keygen(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-keygen(r1) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-keygen(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-keygen(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-keygen(r1) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-keygen(r1) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-keygen(r1) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-keygen(r1) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-keygen(r1) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-keygen(r1)) = false .
  eq kc = mlk-keygen(r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-keygen(r2) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-keygen(r1)) = false .
  eq kc = mlk-keygen(r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-keygen(r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-keygen(r2) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-keygen(r1)) = false .
  eq kc = mlk-keygen(r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-keygen(r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-keygen(r2) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-keygen(r1)) = false .
  eq kc = mlk-keygen(r2) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (r2 \in usecret(s)) = false .
  eq (kc = r1) = false .
  eq (kc = r2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-keygen(r1)) = false .
  eq (kc = mlk-keygen(r2)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandKEMSecret(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq kc = r1 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> RawMsg .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  eq (kc = r1) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandMessage(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || r1 || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq kc = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> SessionKey .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in usecret(s)) = false .
  eq (kc = r1) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruRandSessionKey(s,r1),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq EdDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (EdDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (EdDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq EdDSA-Sign(r1,r2) = senc(k,sign) .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (EdDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq EdDSA-Sign(r1,r2) = senc(k,sign) .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (EdDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (EdDSA-Sign(r1,r2) = senc(k,sign)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (EdDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq MLDSA-Sign(r1,r2) = kc .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (MLDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (MLDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq MLDSA-Sign(r1,r2) = senc(k,sign) .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (MLDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq MLDSA-Sign(r1,r2) = senc(k,sign) .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (MLDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (MLDSA-Sign(r1,r2) = senc(k,sign)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (MLDSA-Sign(r1,r2) = kc) = false .
  eq (kc \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSign2(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,sign) .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,sign) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = true .
  eq (senc(k,sign) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || kc || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(k,sign)) = false .
  eq (kc \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq r2 = sign .
  eq (sign \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(k,r2) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(k,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,r2) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(k,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(k,r2) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(k,r2) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = true .
  eq (r2 = sign) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(k,r2)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r1 = k .
  eq (k \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(r1,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(r1,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(r1,r2) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(r1,r2) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(r1,r2) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = senc(r1,r2) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r1 = k) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = senc(r1,r2)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(intruSymCrypto1(s,r1,r2),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq a = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4)) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq (kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4))) = false .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) \in knl(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq (kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4))) = false .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(k,sign))) \in nw(s)) = true .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> false
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq (kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4))) = false .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq (senc(k,sign) \in knl(s)) = true .
  eq (senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) \in knl(s)) = false .
  eq (msg2(a,a,b,(ecdhk-ci || mlk-ci || senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) || senc(k,sign))) \in nw(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq (kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4))) = false .
  eq kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5) .
  eq (senc(k,sign) \in knl(s)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op ecdhk-ci : -> ECDHK-Cipher .
  op k : -> SessionKey .
  op kc : -> Data .
  op m : -> RawMsg .
  op mlk-ci : -> MLK-Cipher .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> RawMsg .
  op r5 : -> SessionKey .
  op r6 : -> ECDHK-SecretK .
  op r7 : -> MLK-SecretK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (r7 \in usecret(s)) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (kc = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6)) = false .
  eq (kc = mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7)) = false .
  eq (kc = senc(r5,(EdDSA-Sign(EdDSA-PriK(r2),h(r4)) || MLDSA-Sign(MLDSA-PriK(r2),h(r4)) || r4))) = false .
  eq (kc = senc(kcombine(((MLK-PriK(r3) & r7) || (ECDHK-PriK(r3) & r6) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r3)),r6) || ecdhk-keygen(ECDHK-PriK(r3)) || mlk-encapsC(mlk-keygen(MLK-PriK(r3)),r7) || mlk-keygen(MLK-PriK(r3)))),r5)) = false .
  red inv10(s,a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) implies inv10(send(s,r1,r2,r3,r4,r5,r6,r7),a,b,m,k,mlk-ci,ecdhk-ci,kc,sign) .
close

--> Time taken is 1114135ms