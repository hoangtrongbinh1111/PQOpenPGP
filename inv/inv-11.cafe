--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op s : -> Sys .
  red inv11(init,kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(fkMsg(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(fkMsg(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(fkMsg(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (r4 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(fkMsg(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> ECDHK-Cipher .
  op r4 : -> MLK-Cipher .
  op r5 : -> Data .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(fkMsg(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq ecdhk-getSecret(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (ecdhk-getSecret(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (ecdhk-getSecret(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (ecdhk-getSecret(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (ecdhk-getSecret(r1) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakECDH(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq eddsa-getPrivate(r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (eddsa-getPrivate(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (eddsa-getPrivate(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (eddsa-getPrivate(r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (eddsa-getPrivate(r1) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruBreakEdDSA(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (ecdhk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (ecdhk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((ecdhk-getSecret(r2) & r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (ecdhk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((ecdhk-getSecret(r2) & r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (ecdhk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq d = ecdhk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq d = ecdhk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-encapsC(r2,r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq d = ecdhk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-encapsC(r2,r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq d = ecdhk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq (d = ecdhk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq (d = ecdhk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq (d = ecdhk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (ecdhk-getSecret(r2) & r1)) = false .
  eq (d = ecdhk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcECDHKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (mlk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (mlk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((mlk-getSecret(r2) & r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (mlk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((mlk-getSecret(r2) & r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = (mlk-getSecret(r2) & r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq d = mlk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq d = mlk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-encapsC(r2,r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq d = mlk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-encapsC(r2,r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq d = mlk-encapsC(r2,r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq (d = mlk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq (d = mlk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq (d = mlk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = (mlk-getSecret(r2) & r1)) = false .
  eq (d = mlk-encapsC(r2,r1)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-PublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruCalcMLKEMInfo(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = r5 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = r5 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r5 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = r5 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r5 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = r5 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq d = r6 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq d = r6 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r6 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq d = r6 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r6 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq d = r6 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq (d = r6) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq (d = r6) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq (d = r6) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = r5) = false .
  eq (d = r6) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEM(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = (ECDHK-PriK(r2) & r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = (ECDHK-PriK(r2) & r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((ECDHK-PriK(r2) & r5) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = (ECDHK-PriK(r2) & r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((ECDHK-PriK(r2) & r5) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq d = (ECDHK-PriK(r2) & r5) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq d = (MLK-PriK(r2) & r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq d = (MLK-PriK(r2) & r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((MLK-PriK(r2) & r6) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq d = (MLK-PriK(r2) & r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq ((MLK-PriK(r2) & r6) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq d = (MLK-PriK(r2) & r6) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq (d = (MLK-PriK(r2) & r6)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq (d = (MLK-PriK(r2) & r6)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq (d = (MLK-PriK(r2) & r6)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = true .
  eq (d = (ECDHK-PriK(r2) & r5)) = false .
  eq (d = (MLK-PriK(r2) & r6)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (msg(r1,r1,r2,(ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))),r7) \in nw(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComKEMSS(s,r1,r2,r3,r4,r5,r6,r7),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq d = kd .
  eq (kd \in leakscr(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq d = kd .
  eq (kd \in leakscr(s)) = false .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq d = kd .
  eq (kd \in leakscr(s)) = false .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq d = kd .
  eq (kd \in leakscr(s)) = false .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq mlk-decaps(r2,r1) = d .
  eq (d \in leakscr(s)) = false .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (mlk-decaps(r2,r1) \in leakscr(s)) = false .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq d = MLK-PriK(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq d = MLK-PriK(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (MLK-PriK(r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq d = MLK-PriK(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (MLK-PriK(r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq d = MLK-PriK(r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq d = MLK-PkNPair(MLK-PriK(r1),time(s)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq d = MLK-PkNPair(MLK-PriK(r1),time(s)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (MLK-PkNPair(MLK-PriK(r1),time(s)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq d = MLK-PkNPair(MLK-PriK(r1),time(s)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (MLK-PkNPair(MLK-PriK(r1),time(s)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq d = MLK-PkNPair(MLK-PriK(r1),time(s)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq (d = MLK-PkNPair(MLK-PriK(r1),time(s))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq (d = MLK-PkNPair(MLK-PriK(r1),time(s))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq (d = MLK-PkNPair(MLK-PriK(r1),time(s))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (MLK-PriK(r1) \in' leakscr(s)) = false .
  eq (d = MLK-PriK(r1)) = false .
  eq (d = MLK-PkNPair(MLK-PriK(r1),time(s))) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComMLKKeyLt(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = true .
  eq (sdec(r1,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = true .
  eq (sdec(r1,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = false .
  eq (sdec(r1,d) \in (r1 || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = false .
  eq (sdec(r1,d) \in (r1 || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruComSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = false .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = false .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (kd \in sdec(r1,r2)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (kd \in sdec(r1,r2)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (kd \in sdec(r1,r2)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (kd \in sdec(r1,r2)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (sdec(r1,r2) || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = true .
  eq (kd \in knl(s)) = false .
  eq (kd \in sdec(r1,r2)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (d \in sdec(r1,r2)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruDecryptCrypto(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq ecdhk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (ecdhk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (ecdhk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (ecdhk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (ecdhk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op r2 : -> ECDHK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruECDHKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(ECDHK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(ECDHK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-keygen(ECDHK-PriK(r1)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(ECDHK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-keygen(ECDHK-PriK(r1)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(ECDHK-PriK(r1)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq d = eddsa-public(EdDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq d = eddsa-public(EdDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (eddsa-public(EdDSA-PriK(r1)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq d = eddsa-public(EdDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (eddsa-public(EdDSA-PriK(r1)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq d = eddsa-public(EdDSA-PriK(r1)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq d = mldsa-public(MLDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq d = mldsa-public(MLDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mldsa-public(MLDSA-PriK(r1)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq d = mldsa-public(MLDSA-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mldsa-public(MLDSA-PriK(r1)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq d = mldsa-public(MLDSA-PriK(r1)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq d = mlk-keygen(MLK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq d = mlk-keygen(MLK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-keygen(MLK-PriK(r1)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq d = mlk-keygen(MLK-PriK(r1)) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-keygen(MLK-PriK(r1)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq d = mlk-keygen(MLK-PriK(r1)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq (d = mlk-keygen(MLK-PriK(r1))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq (d = mlk-keygen(MLK-PriK(r1))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq (d = mlk-keygen(MLK-PriK(r1))) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op s : -> Sys .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(ECDHK-PriK(r1))) = false .
  eq (d = eddsa-public(EdDSA-PriK(r1))) = false .
  eq (d = mldsa-public(MLDSA-PriK(r1))) = false .
  eq (d = mlk-keygen(MLK-PriK(r1))) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruGetPubInfo(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq mlk-decaps(r2,r1) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (mlk-decaps(r2,r1) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op r2 : -> MLK-Cipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruMLKDecaps(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq d = h(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq d = h(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (h(r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq d = h(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (h(r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq d = h(r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq d = kcombine(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq d = kcombine(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (kcombine(r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq d = kcombine(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (kcombine(r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq d = kcombine(r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq (d = kcombine(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq (d = kcombine(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq (d = kcombine(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (d = h(r1)) = false .
  eq (d = kcombine(r1)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruPrimCrypto(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-keygen(r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-keygen(r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = ecdhk-keygen(r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> ECDHK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = ecdhk-keygen(r1)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandECDHKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = mlk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = mlk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-keygen(r1) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = mlk-keygen(r1) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-keygen(r1) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq d = mlk-keygen(r1) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = mlk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = mlk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = mlk-keygen(r1)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (d = r1) = false .
  eq (d = mlk-keygen(r1)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMLKEMSecret(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> RawMsg .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandMessage(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq d = r1 .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = true .
  eq (sdec(r1,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = true .
  eq (sdec(r1,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = false .
  eq (sdec(r1,d) \in (r1 || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (r1 \in knl(s)) = false .
  eq (sdec(r1,d) \in knl(s)) = false .
  eq (sdec(r1,d) \in (r1 || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq kd = r1 .
  eq (d = r1) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq d = r1 .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> SessionKey .
  op s : -> Sys .
  eq (r1 \in usecret(s)) = false .
  eq (kd = r1) = false .
  eq (d = r1) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruRandSessionKey(s,r1),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq EdDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (EdDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (EdDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (EdDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (EdDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> EdDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq d = kd .
  eq (errData \in knl(s)) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = true .
  eq (d \in knl(s)) = false .
  eq (sdec(kd,d) \in knl(s)) = false .
  eq (sdec(kd,d) \in (d || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq MLDSA-Sign(r1,r2) = d .
  eq (d = kd) = false .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (MLDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (MLDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (MLDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (MLDSA-Sign(r1,r2) = d) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> MLDSA-PrivateK .
  op r2 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSign2(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = true .
  eq (sdec(kd,senc(r1,r2)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = true .
  eq (sdec(kd,senc(r1,r2)) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = false .
  eq (sdec(kd,senc(r1,r2)) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = false .
  eq (sdec(kd,senc(r1,r2)) \in knl(s)) = false .
  eq (sdec(kd,senc(r1,r2)) \in (senc(r1,r2) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = true .
  eq (senc(r1,r2) \in knl(s)) = false .
  eq (sdec(kd,senc(r1,r2)) \in knl(s)) = false .
  eq (sdec(kd,senc(r1,r2)) \in (senc(r1,r2) || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq d = senc(r1,r2) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = senc(r1,r2)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = senc(r1,r2)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = senc(r1,r2)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (d = senc(r1,r2)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> KeyData .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(intruSymCrypto1(s,r1,r2),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = true .
  eq (senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) \in knl(s)) = true .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = true .
  eq (senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) \in knl(s)) = true .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = true .
  eq (senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) \in knl(s)) = false .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = true .
  eq (senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) \in knl(s)) = false .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) || knl(s))) = false .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) || knl(s))) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = true .
  eq (senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) \in knl(s)) = false .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in (mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) || knl(s))) = false .
  eq (sdec(kd,senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) \in (ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) || senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) || knl(s))) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3)) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> false
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) .
  eq (kd \in knl(s)) = true .
  eq (errData \in knl(s)) = false .
  eq (senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4) .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq (d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = true .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq (d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = true .
  eq (sdec(kd,d) \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq (d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4)) = false .
  eq (d \in knl(s)) = true .
  eq (kd \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> true
open INV .
  op d : -> Data .
  op k : -> SessionKey .
  op kd : -> KeyData .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> RawMsg .
  op r4 : -> SessionKey .
  op r5 : -> ECDHK-SecretK .
  op r6 : -> MLK-SecretK .
  op s : -> Sys .
  eq (r4 \in usecret(s)) = false .
  eq (r5 \in usecret(s)) = false .
  eq (r6 \in usecret(s)) = false .
  eq (d = ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5)) = false .
  eq (d = mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6)) = false .
  eq (d = senc(r4,(EdDSA-Sign(EdDSA-PriK(r1),h(r3)) || MLDSA-Sign(MLDSA-PriK(r1),h(r3)) || r3))) = false .
  eq (d = senc(kcombine(((MLK-PriK(r2) & r6) || (ECDHK-PriK(r2) & r5) || ecdhk-encapsC(ecdhk-keygen(ECDHK-PriK(r2)),r5) || ecdhk-keygen(ECDHK-PriK(r2)) || mlk-encapsC(mlk-keygen(MLK-PriK(r2)),r6) || mlk-keygen(MLK-PriK(r2)))),r4)) = false .
  eq (d \in knl(s)) = false .
  red inv11(s,kd,d,k) implies inv11(send(s,r1,r2,r3,r4,r5,r6),kd,d,k) .
close

--> Time taken is 5941ms