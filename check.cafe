in invariants.cafe

-- mod INV {
--   pr(PQOPENPGP)
--   vars S : Sys
--   var M : RawMsg
--   var K : SessionKey
--   vars A B A2 B2 : Prin
--   vars KbSK1 : KbSecret -- kyber private key
--   vars KbPK1 : KbPublic -- keyber public key

--   vars EcSK1 : EcSecretK -- ecdh private key
--   vars EcPK1 : EcPublicK -- ecdh public key

-- -- checking the protocol execution
--   op check : Sys Prin Prin RawMsg SessionKey EcSecretK KbSecret -> Bool .
--   eq check(S,A,B,M,K,EcSK1,KbSK1) = 
--     (msg1(A,A,B, (ecPublic(EcSK1) || encapsC(kyberPubK(B),KbSK1) || senc(kcombine(ecShare(ecdhPubK(B),EcSK1),ecPublic(EcSK1),encapsK(kyberPubK(B),KbSK1),encapsC(kyberPubK(B),KbSK1)),K) || senc(K,ecSign(esPriK(A),h(M)) || diSign(diPriK(A),h(M)) || M))) \in nw(S)) .
-- }

open INV .
  ops s : -> Sys .
  ops a b : -> Prin .
  ops m : -> RawMsg .
  ops k : -> SessionKey .
  ops kbSK1 : -> KbSecret . -- kyber private key

  ops ecSK1 : -> EcSecretK . -- ecdh private key
  ops ecPK1 : -> EcPublicK . -- ecdh public key

  eq (a = intru) = false .
  eq (b = intru) = false .

  eq s = send(init,a,b,m,k,ecSK1,kbSK1) .
--   red nw(s) .
  red check(s,a,b,m,k,ecSK1,kbSK1) .
close